---
- name: install and configure webserver
  hosts: webserver
  vars:
    firewall_pkg: firewalld
    firewall_svc: firewalld
    web_pkg: httpd
    web_svc: httpd
    ssl_pkg: mod_ssl
    httpdconf_src: files/httpd.conf
    httpdconf_dest: /etc/httpd/conf/httpd.conf
    htaccess_src: files/.htaccess
    secrets_dir: /etc/httpd/secrets
    secrets_src: files/htpasswd
    secrets_dest: "{{ secrets_dir }}/htpasswd"
    web_root: /var/www/html
  tasks:
    - name: ensure latest version of the necessary package
      yum:
        name:
          - "{{ firewall_pkg }}"
          - "{{ web_pkg }}"
          - "{{ ssl_pkg }}"
        state: latest
    - name: ensures that the file specified by the httpdconf_src variable has been copied
      copy:
        src: "{{ httpdconf_src }}"
        dest: "{{ httpdconf_dest }}"
        owner: root
        group: root
        mode: 0644
    - name: create the directory specified by the secrets_dir variable on the managed host. 
      file:
        path: "{{ secrets_dir }}"
        state: directory
        owner: apache
        group: apache
        mode: 0500
    - name: place a htpasswd file, used for basic authentication of web users. 
      copy:
        src: "{{ secrets_src }}"
        dest: "{{ secrets_dest }}"
        owner: apache
        group: apache
        mode: 0400
    - name: create a .htaccess file in the document root directory of the web server. 
      copy:
        src: "{{ htaccess_src }}"
        dest: "{{ web_root }}/.htaccess"
        owner: apache
        group: apache
        mode: 0400
    - name: create the web content file index.html in the directory specified by the web_root variable. 
      copy:
        content: "{{ ansible_facts['fqdn'] }} ({{ ansible_facts['default_ipv4']['address'] }}) has been customized by Ansible.\n"
        dest: "{{ web_root }}/index.html"
    - name: enable and start the firewall service on the managed host.
      service:
        name: "{{ firewall_svc }}"
        state: started
        enabled: true
    - name: allow the https service needed for users to access web services
      firewalld:
        service: https
        state: enabled
        immediate: true
        permanent: true
    - name: enable and start the web service
      service:
        name: "{{ web_svc }}"
        state: started
        enabled: true

- name: test authentication to the web server
  hosts: localhost
  become: no
  vars:
    web_user: guest
  vars_files:
    - vars/secret.yml
  tasks:
    - name: connect to web server with basic auth
      uri:
        url: https://serverb.lab.example.com
        validate_certs: no
        force_basic_auth: yes
        user: "{{ web_user }}"
        password: "{{ web_pass }}"
        return_content: yes   
        status_code: 200
      register: auth_test
    - debug:
        var: auth_test.content





